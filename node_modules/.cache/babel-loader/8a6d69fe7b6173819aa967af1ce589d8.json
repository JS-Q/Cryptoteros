{"ast":null,"code":"import _slicedToArray from\"/Users/sq/Code/UW FullStack Course/Front-End Application Development with JavaScript/Final Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import Asset from'../asset/asset';import assetListJSON from\"../../data/list-all-assets.json\";import assetIconsJSON from\"../../data/list-all-asset-icons.json\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ASSET_SYMBOLS=['BTC','ETH','LINK','ADA','MATIC'];export default function AssetList(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),assetList=_useState2[0],setAssetList=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],setLoading=_useState6[1];useEffect(function(){setAssetList(assetListJSON);setLoading(false);setError(false);// Commented out due to rate limiting\n//    fetch(`https://rest.coinapi.io/v1/assets?filter_asset_id=${ASSET_SYMBOLS.join(\",\")}`, {\n//       headers: {\n//          'X-CoinAPI-Key': '8862BDA4-E571-49DA-87AC-3FBB99402385',\n//       },\n//    })\n//       .then((response) => response.json())\n//       .then((data) => {\n//          setAssetList(data);\n//          setLoading(false);\n//       })\n//       .catch((_error) => {\n//          setLoading(false);\n//          setError(true);\n//       });\n},[assetList]);var content=/*#__PURE__*/_jsx(_Fragment,{});if(error){content=/*#__PURE__*/_jsx(\"h1\",{children:\"ERROR\"});}if(!error&&!loading&&assetList.length!==0){content=/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Assets\"}),ASSET_SYMBOLS.map(function(symbol,index){var assetData=assetList.find(function(asset){return asset.asset_id===symbol;});var iconData=assetIconsJSON.find(function(assetIcon){return assetIcon.asset_id===symbol;});return/*#__PURE__*/_jsx(Asset,{asset:assetData,imgUrl:iconData.url},index);})]});}return content;}","map":{"version":3,"sources":["/Users/sq/Code/UW FullStack Course/Front-End Application Development with JavaScript/Final Project/src/components/asset-list/asset-list.js"],"names":["React","useEffect","useState","Asset","assetListJSON","assetIconsJSON","ASSET_SYMBOLS","AssetList","props","assetList","setAssetList","error","setError","loading","setLoading","content","length","map","symbol","index","assetData","find","asset","asset_id","iconData","assetIcon","url"],"mappings":"yNAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,gBAAlB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iCAA1B,CACA,MAAOC,CAAAA,cAAP,KAA2B,sCAA3B,C,6IAEA,GAAMC,CAAAA,aAAa,CAAG,CAAC,KAAD,CAAQ,KAAR,CAAe,MAAf,CAAuB,KAAvB,CAA8B,OAA9B,CAAtB,CAEA,cAAe,SAASC,CAAAA,SAAT,CAAmBC,KAAnB,CAA0B,eACJN,QAAQ,CAAC,EAAD,CADJ,wCAC/BO,SAD+B,eACpBC,YADoB,8BAEZR,QAAQ,CAAC,KAAD,CAFI,yCAE/BS,KAF+B,eAExBC,QAFwB,8BAGRV,QAAQ,CAAC,IAAD,CAHA,yCAG/BW,OAH+B,eAGtBC,UAHsB,eAKtCb,SAAS,CAAC,UAAM,CACbS,YAAY,CAACN,aAAD,CAAZ,CACAU,UAAU,CAAC,KAAD,CAAV,CACAF,QAAQ,CAAC,KAAD,CAAR,CAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,CApBQ,CAoBN,CAACH,SAAD,CApBM,CAAT,CAsBA,GAAIM,CAAAA,OAAO,cAAG,kBAAd,CACA,GAAIJ,KAAJ,CAAW,CACRI,OAAO,cAAG,6BAAV,CACF,CAED,GAAI,CAACJ,KAAD,EAAU,CAACE,OAAX,EAAsBJ,SAAS,CAACO,MAAV,GAAqB,CAA/C,CAAkD,CAC/CD,OAAO,cACJ,wCACG,8BADH,CAEIT,aAAa,CAACW,GAAd,CAAkB,SAACC,MAAD,CAASC,KAAT,CAAmB,CACnC,GAAMC,CAAAA,SAAS,CAAGX,SAAS,CAACY,IAAV,CACf,SAACC,KAAD,QAAWA,CAAAA,KAAK,CAACC,QAAN,GAAmBL,MAA9B,EADe,CAAlB,CAIA,GAAMM,CAAAA,QAAQ,CAAGnB,cAAc,CAACgB,IAAf,CACd,SAACI,SAAD,QAAeA,CAAAA,SAAS,CAACF,QAAV,GAAuBL,MAAtC,EADc,CAAjB,CAIA,mBAAO,KAAC,KAAD,EAAmB,KAAK,CAAEE,SAA1B,CAAqC,MAAM,CAAEI,QAAQ,CAACE,GAAtD,EAAYP,KAAZ,CAAP,CACF,CAVA,CAFJ,GADH,CAgBF,CAED,MAAOJ,CAAAA,OAAP,CACF","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Asset from '../asset/asset';\nimport assetListJSON from \"../../data/list-all-assets.json\";\nimport assetIconsJSON from \"../../data/list-all-asset-icons.json\";\n\nconst ASSET_SYMBOLS = ['BTC', 'ETH', 'LINK', 'ADA', 'MATIC'];\n\nexport default function AssetList(props) {\n   const [assetList, setAssetList] = useState([]);\n   const [error, setError] = useState(false);\n   const [loading, setLoading] = useState(true);\n\n   useEffect(() => {\n      setAssetList(assetListJSON);\n      setLoading(false);\n      setError(false);\n\n   // Commented out due to rate limiting\n   //    fetch(`https://rest.coinapi.io/v1/assets?filter_asset_id=${ASSET_SYMBOLS.join(\",\")}`, {\n   //       headers: {\n   //          'X-CoinAPI-Key': '8862BDA4-E571-49DA-87AC-3FBB99402385',\n   //       },\n   //    })\n   //       .then((response) => response.json())\n   //       .then((data) => {\n   //          setAssetList(data);\n   //          setLoading(false);\n   //       })\n   //       .catch((_error) => {\n   //          setLoading(false);\n   //          setError(true);\n   //       });\n   }, [assetList]);\n\n   let content = <></>;\n   if (error) {\n      content = <h1>ERROR</h1>;\n   }\n\n   if (!error && !loading && assetList.length !== 0) {\n      content = (\n         <>\n            <h2>Assets</h2>\n            {ASSET_SYMBOLS.map((symbol, index) => {\n               const assetData = assetList.find(\n                  (asset) => asset.asset_id === symbol\n               );\n               \n               const iconData = assetIconsJSON.find(\n                  (assetIcon) => assetIcon.asset_id === symbol\n               );\n\n               return <Asset key={index} asset={assetData} imgUrl={iconData.url}></Asset>;\n            })}\n         </>\n      );\n   }\n\n   return content;\n}\n"]},"metadata":{},"sourceType":"module"}