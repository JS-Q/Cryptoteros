{"ast":null,"code":"var _jsxFileName = \"/Users/sq/Code/UW FullStack Course/Front-End Application Development with JavaScript/Final Project/src/components/asset/asset.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Asset({\n  asset: assetData,\n  imgUrl\n}) {\n  _s();\n\n  const [asset, setAsset] = useState({});\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setAsset(assetData);\n    setLoading(false);\n    setError(false);\n  }, [assetData]);\n\n  let content = /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ERROR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this);\n  }\n\n  if (!error && !loading && Object.keys(asset).length !== 0) {\n    content = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: asset.asset_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Price: \", asset.price_usd]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imgUrl //   src={require(`../../data/images/${assetData.asset_id.toLowerCase()}.png`)}\n        ,\n        alt: `${assetData.asset_id} logo`,\n        height: \"50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n  return content;\n}\n\n_s(Asset, \"c+0OJ/Qxs4OxUDBMgQFjXuNUFiE=\");\n\n_c = Asset;\nAsset.propTypes = {\n  symbol: PropTypes.string\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Asset\");","map":{"version":3,"sources":["/Users/sq/Code/UW FullStack Course/Front-End Application Development with JavaScript/Final Project/src/components/asset/asset.js"],"names":["PropTypes","React","useEffect","useState","Asset","asset","assetData","imgUrl","setAsset","error","setError","loading","setLoading","content","Object","keys","length","asset_id","price_usd","propTypes","symbol","string"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA,KAAK,EAAEC,SAAT;AAAoBC,EAAAA;AAApB,CAAf,EAA6C;AAAA;;AACzD,QAAM,CAACF,KAAD,EAAQG,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACbM,IAAAA,QAAQ,CAACF,SAAD,CAAR;AACAM,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACF,GAJQ,EAIN,CAACJ,SAAD,CAJM,CAAT;;AAMA,MAAIO,OAAO,gBAAG,qCAAd;;AACA,MAAIJ,KAAJ,EAAW;AACRI,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACF;;AAED,MAAI,CAACJ,KAAD,IAAU,CAACE,OAAX,IAAsBG,MAAM,CAACC,IAAP,CAAYV,KAAZ,EAAmBW,MAAnB,KAA8B,CAAxD,EAA2D;AACxDH,IAAAA,OAAO,gBACJ;AAAA,8BACG;AAAA,kBAAKR,KAAK,CAACY;AAAX;AAAA;AAAA;AAAA;AAAA,cADH,eAEG;AAAA,8BAAWZ,KAAK,CAACa,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFH,eAGG;AACE,QAAA,GAAG,EAAEX,MADP,CAEA;AAFA;AAGE,QAAA,GAAG,EAAG,GAAED,SAAS,CAACW,QAAS,OAH7B;AAIE,QAAA,MAAM,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA,cAHH;AAAA,oBADH;AAaF;;AACD,SAAOJ,OAAP;AACF;;GAhCuBT,K;;KAAAA,K;AAkCxBA,KAAK,CAACe,SAAN,GAAkB;AACfC,EAAAA,MAAM,EAAEpB,SAAS,CAACqB;AADH,CAAlB","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\n\nexport default function Asset({ asset: assetData, imgUrl }) {\n   const [asset, setAsset] = useState({});\n   const [error, setError] = useState(false);\n   const [loading, setLoading] = useState(true);\n\n   useEffect(() => {\n      setAsset(assetData);\n      setLoading(false);\n      setError(false);\n   }, [assetData]);\n\n   let content = <></>;\n   if (error) {\n      content = <h1>ERROR</h1>;\n   }\n\n   if (!error && !loading && Object.keys(asset).length !== 0) {\n      content = (\n         <>\n            <h2>{asset.asset_id}</h2>\n            <p>Price: {asset.price_usd}</p>\n            <img\n              src={imgUrl}\n            //   src={require(`../../data/images/${assetData.asset_id.toLowerCase()}.png`)}\n              alt={`${assetData.asset_id} logo`}\n              height=\"50\"\n              >\n            </img>\n         </>\n      );\n   }\n   return content;\n}\n\nAsset.propTypes = {\n   symbol: PropTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}