{"ast":null,"code":"var _jsxFileName = \"/Users/sq/Code/UW FullStack Course/Front-End Application Development with JavaScript/Final Project/src/components/asset-list/asset-list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Asset from '../asset/asset';\nimport assetListJSON from \"../../data/list-all-assets.json\";\nimport assetIconsJSON from \"../../data/list-all-asset-icons.json\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ASSET_SYMBOLS = ['BTC', 'ETH', 'LINK', 'ADA', 'MATIC'];\nexport default function AssetList(props) {\n  _s();\n\n  const [assetList, setAssetList] = useState([]);\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setAssetList(assetListJSON);\n    setLoading(false);\n    setError(false); // Commented out due to rate limiting\n    //    fetch(`https://rest.coinapi.io/v1/assets?filter_asset_id=${ASSET_SYMBOLS.join(\",\")}`, {\n    //       headers: {\n    //          'X-CoinAPI-Key': '8862BDA4-E571-49DA-87AC-3FBB99402385',\n    //       },\n    //    })\n    //       .then((response) => response.json())\n    //       .then((data) => {\n    //          setAssetList(data);\n    //          setLoading(false);\n    //       })\n    //       .catch((_error) => {\n    //          setLoading(false);\n    //          setError(true);\n    //       });\n  }, [assetList]);\n\n  let content = /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ERROR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this);\n  }\n\n  if (!error && !loading && assetList.length !== 0) {\n    content = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Assets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), ASSET_SYMBOLS.map((symbol, index) => {\n        const assetData = assetList.find(asset => asset.asset_id === symbol);\n        const iconData = assetIconsJSON.find(assetIcon => assetIcon.asset_id === symbol);\n        return /*#__PURE__*/_jsxDEV(Asset, {\n          asset: assetData,\n          imgUrl: iconData.url\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 23\n        }, this);\n      })]\n    }, void 0, true);\n  }\n\n  return content;\n}\n\n_s(AssetList, \"diy/1sygYyHIvrUIWgmIBVtrfgo=\");\n\n_c = AssetList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssetList\");","map":{"version":3,"sources":["/Users/sq/Code/UW FullStack Course/Front-End Application Development with JavaScript/Final Project/src/components/asset-list/asset-list.js"],"names":["React","useEffect","useState","Asset","assetListJSON","assetIconsJSON","ASSET_SYMBOLS","AssetList","props","assetList","setAssetList","error","setError","loading","setLoading","content","length","map","symbol","index","assetData","find","asset","asset_id","iconData","assetIcon","url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,cAAP,MAA2B,sCAA3B;;;AAEA,MAAMC,aAAa,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,KAAvB,EAA8B,OAA9B,CAAtB;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACtC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACbS,IAAAA,YAAY,CAACN,aAAD,CAAZ;AACAU,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,IAAAA,QAAQ,CAAC,KAAD,CAAR,CAHa,CAKhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,GApBQ,EAoBN,CAACH,SAAD,CApBM,CAAT;;AAsBA,MAAIM,OAAO,gBAAG,qCAAd;;AACA,MAAIJ,KAAJ,EAAW;AACRI,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACF;;AAED,MAAI,CAACJ,KAAD,IAAU,CAACE,OAAX,IAAsBJ,SAAS,CAACO,MAAV,KAAqB,CAA/C,EAAkD;AAC/CD,IAAAA,OAAO,gBACJ;AAAA,8BACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,EAEIT,aAAa,CAACW,GAAd,CAAkB,CAACC,MAAD,EAASC,KAAT,KAAmB;AACnC,cAAMC,SAAS,GAAGX,SAAS,CAACY,IAAV,CACdC,KAAD,IAAWA,KAAK,CAACC,QAAN,KAAmBL,MADf,CAAlB;AAIA,cAAMM,QAAQ,GAAGnB,cAAc,CAACgB,IAAf,CACbI,SAAD,IAAeA,SAAS,CAACF,QAAV,KAAuBL,MADxB,CAAjB;AAIA,4BAAO,QAAC,KAAD;AAAmB,UAAA,KAAK,EAAEE,SAA1B;AAAqC,UAAA,MAAM,EAAEI,QAAQ,CAACE;AAAtD,WAAYP,KAAZ;AAAA;AAAA;AAAA;AAAA,gBAAP;AACF,OAVA,CAFJ;AAAA,oBADH;AAgBF;;AAED,SAAOJ,OAAP;AACF;;GApDuBR,S;;KAAAA,S","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Asset from '../asset/asset';\nimport assetListJSON from \"../../data/list-all-assets.json\";\nimport assetIconsJSON from \"../../data/list-all-asset-icons.json\";\n\nconst ASSET_SYMBOLS = ['BTC', 'ETH', 'LINK', 'ADA', 'MATIC'];\n\nexport default function AssetList(props) {\n   const [assetList, setAssetList] = useState([]);\n   const [error, setError] = useState(false);\n   const [loading, setLoading] = useState(true);\n\n   useEffect(() => {\n      setAssetList(assetListJSON);\n      setLoading(false);\n      setError(false);\n\n   // Commented out due to rate limiting\n   //    fetch(`https://rest.coinapi.io/v1/assets?filter_asset_id=${ASSET_SYMBOLS.join(\",\")}`, {\n   //       headers: {\n   //          'X-CoinAPI-Key': '8862BDA4-E571-49DA-87AC-3FBB99402385',\n   //       },\n   //    })\n   //       .then((response) => response.json())\n   //       .then((data) => {\n   //          setAssetList(data);\n   //          setLoading(false);\n   //       })\n   //       .catch((_error) => {\n   //          setLoading(false);\n   //          setError(true);\n   //       });\n   }, [assetList]);\n\n   let content = <></>;\n   if (error) {\n      content = <h1>ERROR</h1>;\n   }\n\n   if (!error && !loading && assetList.length !== 0) {\n      content = (\n         <>\n            <h2>Assets</h2>\n            {ASSET_SYMBOLS.map((symbol, index) => {\n               const assetData = assetList.find(\n                  (asset) => asset.asset_id === symbol\n               );\n               \n               const iconData = assetIconsJSON.find(\n                  (assetIcon) => assetIcon.asset_id === symbol\n               );\n\n               return <Asset key={index} asset={assetData} imgUrl={iconData.url}></Asset>;\n            })}\n         </>\n      );\n   }\n\n   return content;\n}\n"]},"metadata":{},"sourceType":"module"}